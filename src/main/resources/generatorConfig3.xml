<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>

    <!--数据库驱动 -->
    <classPathEntry location="libs/db2jcc_license_cu.jar"/>
    <classPathEntry location="libs/db2jcc4.jar"/>
    <classPathEntry location="libs/db2java.jar"/>

    <context id="DB2Tables" targetRuntime="tk.mybatis.mapper.generator.TkMyBatis3Impl" defaultModelType="flat">

        <property name="javaFileEncoding" value="UTF-8"/>

        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="tk.mybatis.mapper.common.Mapper"/>
            <!-- caseSensitive默认false，当数据库表名区分大小写时，可以将该属性设置为true -->
            <property name="caseSensitive" value="true"/>
        </plugin>

        <!-- 是否去除自动生成的注释 -->
        <commentGenerator>
            <property name="suppressAllComments" value="true"></property>
            <property name="suppressDate" value="true"></property>
            <property name="javaFileEncoding" value="utf-8"/>
        </commentGenerator>

        <!-- 数据库连接的信息 -->
        <jdbcConnection driverClass="${driverClass}"
                        connectionURL="${connectionURL}"
                        userId="${userId}"
                        password="${password}">
        </jdbcConnection>

        <!-- false：JDBC DECIMAL、NUMERIC类型解析为Integer，默认方式 -->
        <!-- true： JDBC DECIMAL、NUMERIC类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成model模型的包名和位置 -->
        <javaModelGenerator targetPackage="${modelPackage}" targetProject="${src_main_java}">
            <!-- 是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="true"></property>
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true"></property>
        </javaModelGenerator>

        <!-- 生成xml mapper映射文件的包名和位置 --><!-- mapper.xml -->
        <sqlMapGenerator targetPackage="${sqlMapperPackage}" targetProject="${src_main_java}">
            <property name="enableSubPackages" value="true"></property>
        </sqlMapGenerator>

        <!--生成xml dao 的包名和位置 --><!-- mapper接口 -->
        <javaClientGenerator targetPackage="${daoPackage}" targetProject="${src_main_java}" type="XMLMAPPER">
            <property name="enableSubPackages" value="true"></property>
        </javaClientGenerator>

        <table schema="test1" tableName="%" mapperName="{0}Dao"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
            <generatedKey column="id" sqlStatement="DB2" identity="true"/>
        </table>

        <!--<table schema="twhis" tableName="%" mapperName="{0}Dao"-->
               <!--enableCountByExample="false" enableUpdateByExample="false"-->
               <!--enableDeleteByExample="false" enableSelectByExample="false"-->
               <!--selectByExampleQueryId="false">-->
            <!--<generatedKey column="id" sqlStatement="DB2" identity="true"/>-->
        <!--</table>-->

        </context>
    </generatorConfiguration>